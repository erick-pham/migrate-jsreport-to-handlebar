<div style="position: relative; width: 140px">
  <svg class="progress-ring" width="140" height="75">
    <circle class="progress-ring-chart__circle" stroke="#E9E7EB"
      stroke-dasharray="{{circumferenceState}} {{circumferenceState}}" stroke-dashoffset="{{halfCircumferenceState}}"
      fill="transparent" r="65" cx="70" cy="5"></circle>
    <circle class="progress-ring-chart__circle" stroke="{{getHappiUColor currentScore}}" fill="transparent"
      stroke-dasharray="{{circumferenceState}} {{circumferenceState}}" stroke-dashoffset={{getOffset currentScore}}
      r="65" cx="70" cy="5"></circle>
  </svg>
  <img style="
          position: absolute;
          bottom: -17px;
          left: 50%;
          transform: rotate({{getNeedleRotate currentScore}}deg);
          margin-left: -24px;
          transition: transform 1s;
          transform-origin: center 29px;
        " width="55" src="{#asset images/icon-needle.svg @encoding=dataURI}" alt="" />
  <img style="
          position: absolute;
          bottom: 8px;
          width: 104px;
          left: 50%;
          transform: translateX(-50%);
        " src="{#asset images/circle-dot.svg @encoding=dataURI}" alt="" />
  {{!-- {isShowScore && (
  <GaugeScore translate={(width / 2) * 1.7} rotate={-0.15} width={width / 2}>
    <Box style={{ fontSize: 18 }}>
      {gapScore > 0 ? `+${gapScore}` : `${gapScore}`}{' '}
      {gapScore >= 0 ? (
      <ReplyOutlined style={{ transform: 'rotate(90deg)' , verticalAlign: 'sub' , marginLeft: '-2px' , color: colors[0],
        }} />
      ) : (
      <ReplyOutlined style={{ transform: 'rotate(-90deg)' , verticalAlign: 'sub' , marginLeft: '-5px' , color:
        colors[0], }} />
      )}
    </Box>
  </GaugeScore>
  )} --}}
</div>